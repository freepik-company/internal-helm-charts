apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cog-ai-model.fullname" . }}
  labels:
    {{- include "cog-ai-model.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cog-ai-model.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cog-ai-model.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      runtimeClassName: nvidia
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cog-ai-model.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if eq .Values.initContainer.enabled "true" }}
        - name: {{ include "cog-ai-model.name" . }}-init
          image: datamachines/git-lfs:latest
          volumeMounts:
            - name: model-data-volume
              mountPath: "/src/model_data"
          args:
            - "/bin/sh"
            - "-c"
            - "mkdir -p /src; git clone {{ .Values.config.modelRepo }} /src/model_data || (cd /src/model_data && git pull)"
        {{- end }}        
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # TODO: Dar más tiempo para cuando el modelo se está usando para inferencia
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: model-data-volume
              mountPath: "/src/model_data"
      volumes:
        - name: model-data-volume
          hostPath:
            path: {{ .Values.config.modelLocalDir }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
